ENGENHARIA DE SOFTWARE

Profª Maria Joseane
Email: mariajoseane@prof.unipar.br

Códigos de ética e práticas profissionais da Engenharia de Software
    1 - PÚBLICO: Eng. de Software devem agir de acordi com o interesse público;
    2 - CLIENTE E EMPREGADOR: Eng. de Software devem agir de maneira que seja do melhor interesse de seu cliente e empregador e de acordo 
    com o interesse público;
    3 - PRODUTO: Eng. de Software devem garantir que seus produtos e modificações relacionadasatendam aos mais altos padrões profissionais 
    possiveis;
    4 - JULGAMENTO: Eng. de Software devem manter a integridade e a independência em seu julgamento profissional;
    5 - GERENCIAMENTO: Gerentes e líderes de engenharia de software devem aceitar e promover uma abordagem ética para o gerenciamento de 
    desenvolvimento e manutenção de software;
    6 - PROFISSÃO: Eng. de Software devem aprimorar a integridade e a reputação da profissão de acordo com o interesse público;
    7 - COLEGAS: Eng. de Software devem auxiliar e ser jusos com seus colegas;
    8 - SI PRORPRIO: Eng. de Software devem participar da aprendizagem contínua durante toda a vida, e devem promover uma abordagem ética 
    e pratica da profissão.

        ACM/IEEE (c IEEE/ACM 1999)

Estudo de Caso
    1 - Um sistema embutido
        Trata-se de um sistema no qual o software controla um dispositico de hardware e é embutido neste dispositivo. As questões em sis-
        temas embutidos incluem tipicamente o tamanho físico, a capacidade de resposta, o gerenciamento de energia, etc. O exemplo de um 
        sistema embutido que uso é um sistema para controlar um dispositivo médico.

#   Microsoft Visio     #
#   astah               #

Processos de Software
    Quatro atividades fundamentais para a Eng. de Software
        1 - ESPECIFICAÇÃO: A funcionalidade do software e as restrições a seu funcionamento devem ser definidas;
        2 - PROJETO E IMPLEMENTAÇÃO: O software deve ser produzido para atender as especificações;
        3 - VALIDAÇÃO: O software deve ser validado para garantir que atenda as demandas do cliente;
        4 - EVOLUÇÃO: O software deve evoluir para atender as necessidades de mudança dos clientes.

    Modelos de Processo de software
        - Modelo em Cascata
            É um exemplo de um processo dirigido a planos - em princípio, você deve planejar e programar todas as atividades do processo 
            antes de começar a trabalhar nelas.

                1 - Analise e defiição de requisitos: Os serviços, restrições e metas do sistema são estabelecidos por meio de consulta aos
                usuários.
                2 - Projeto de sistema e software: Esse processo aloca os requisitos tanto para sistemas de hardware como para sistemas de 
                software, por meio da definição de uma arquitetura geral do sistema.
                3 - Implementação e teste unitário: Durante esse estágio, o projeto do software é desenvolvido como um conjunto de programas 
                ou unidades de programa. O teste unitário envolve a verificação de que cada unidade atenda a sua especificação.
                4 - As unidades individuais do programa ou programas são integradas e testadas como um sistema completo para assegurar que 
                os requisitos do software tenham sido atendidos. Após o teste, o sistema de software é entregue ao cliente.
                5 - Operação e manutenção: O sistema é instalado e colocado em uso. A manutenção envolve a correção de erros que não foram 
                descobertos em estágios iniciais do ciclo de vida, com melhora da implementação das unidades do sistema e ampliação de seus 
                serviços em resposta às descobertas de novos requisitos.

        - Desenvolvimento Incremental
            Baseado na ideia de desenvolver uma implementação inicial, expô-la aos comentários dos usuários e continuar por meio da criação
            de várias versões até que um sistema adequado seja desenvolvido. Atividades de especificação, desenvlvimento e validação são 
            intercaladas e não separadas, com rápido feedback entre todas as atividades.

                Vantagens
                    1 - o custo de acomodar as mudanças nos requisitos do cliente é reduzido.
                    2 - é mais facil obter o feedback dos clientes.
               
                Problemas
                    1 - o processo não é visivel.
                    2 - a estrutura do sistema tende a se degradar com a adição dos novos incrementos.

        - Engenharia de Software orientada a reúso
            Abordagens orientadas a reuso dependem de uma ampla base de componentes reusáveis de software e de um framework de integração 
            para a composição desses componentes.

Atividades do processo
    Especificação de software
        1 - Estudo de viabilidade
        2 - Elicitação e análise de requisitos
        3 - Especificação de requisitos
        4 - A validação de requisitos

    Projeto e implementação de software
        É o processo de conversão de uma especificação do sistema em um sistema executável.

    Validação de software
        Tem a intenção de mostrar que um software se adequa a suas especificações ao mesmo tempo que stisfaz as especificações do cliente.

    Evolução do software
        Mudanças de requisitos e às necessidades do cliente.

    Prototipação 
        - Uma versão inicial de um sistema
        - Demonstra conceitos
        - Experimentas opções
        - Descobrir mais sobre o problema e suas possíveis soluções

    RUP - Rational Unified Process
        é um exemplo de modelo de processo moderno

        1 - Dinâmico
        2 - Estatico
        3 - Pratico    
        